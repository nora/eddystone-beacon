"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var constants_1 = require("../constants");
var BeaconService_1 = require("./BeaconService");
var Beacon = (function () {
    function Beacon(device) {
        this.device = device;
    }
    Beacon.prototype.onDisconnect = function (listener) {
        this.device.addEventListener('gattserverdisconnected', listener);
    };
    Beacon.prototype.connect = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var bluetoothGattServer, service;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.device.gatt) {
                            return [2 /*return*/, Promise.reject('Bluetooth device is probably not a beacon - it does not support GATT')];
                        }
                        return [4 /*yield*/, this.device.gatt.connect()];
                    case 1:
                        bluetoothGattServer = _a.sent();
                        return [4 /*yield*/, bluetoothGattServer
                                .getPrimaryService(constants_1.default.EDDYSTONE_CONFIG_SERVICE_UUID)];
                    case 2:
                        service = _a.sent();
                        return [2 /*return*/, new BeaconService_1.BeaconService(service)];
                }
            });
        });
    };
    Beacon.prototype.disconnect = function () {
        var gatt = this.device.gatt;
        if (!(gatt && gatt.connected)) {
            console.warn('Ignored disconnection request. You are not connected!');
            return;
        }
        gatt.disconnect();
    };
    return Beacon;
}());
exports.Beacon = Beacon;
//# sourceMappingURL=Beacon.js.map