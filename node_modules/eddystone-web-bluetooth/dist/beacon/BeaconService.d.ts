/// <reference types="web-bluetooth" />
export declare class BeaconService {
    service: BluetoothRemoteGATTService;
    constructor(service: BluetoothRemoteGATTService);
    private readCharacteristic(uuid);
    private writeCharacteristic(uuid, value);
    /**
     * Interval.
     */
    readInterval(): Promise<number>;
    writeInterval(ms: number): Promise<void>;
    /**
     * LOCK
     */
    isLocked(): Promise<boolean>;
    /**
     * RADIO
     */
    readRadioTxPower(): Promise<number>;
    /**
     * Writes Radio Tx Power.
     * @param dbm Tx power. Values should range between -100 and +20 dBm.
     * If a power is selected that is not supported by the radio, the beacon should select
     * the next highest power supported, or else the maximum power.
     * @see https://github.com/google/eddystone/blob/master/eddystone-url/README.md#tx-power-level
     */
    writeRadioTxPower(dbm: number): Promise<void>;
    readAdvertisedTxPower(): Promise<number>;
    writeAdvertisedTxPower(dbm: number): Promise<void>;
    /**
     * URL
     */
    readUrl(): Promise<string>;
    writeUrl(url: string): Promise<void>;
    clearUrl(): Promise<void>;
    /**
     * MISC
     */
    factoryReset(): Promise<void>;
}
